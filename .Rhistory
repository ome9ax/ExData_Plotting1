abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_interval <- aggregate(steps ~ interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
step_row_total <- nrow(data)
step_row_na <- nrow(data[is.na(data$steps), ])
step_row_positive <- nrow(data[data$steps > 0, ])
data_cleaned <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
data_cleaned$steps <- with(merged_data, ifelse(is.na(steps.x), steps.y, steps.x))
data_cleaned <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
data_cleaned$steps <- with(data_cleaned, ifelse(is.na(steps.x), steps.y, steps.x))
data_cleaned <- data_cleaned[, c('date', 'interval', 'steps')]
knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
# Get dataset
file_name <- 'activity'
zip_file <- paste0(file_name, '.zip')
if(!file.exists(zip_file))
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip', zip_file)
data <- read.csv(unz(zip_file, paste0(file_name, '.csv')), na.strings = 'NA')
data$date <- as.Date(data$date, format = '%Y-%m-%d') # convert into date
steps_day <- aggregate(steps ~ date, data, sum)
with(steps_day, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_interval <- aggregate(steps ~ interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
step_row_total <- nrow(data)
step_row_na <- nrow(data[is.na(data$steps), ])
step_row_positive <- nrow(data[data$steps > 0, ])
data_cleaned <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
data_cleaned$steps <- with(data_cleaned, ifelse(is.na(steps.x), steps.y, steps.x))
data_cleaned <- data_cleaned[, c('date', 'interval', 'steps')]
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
old.par <- par()
par(mfcol = c(2, 1))
with(steps_day, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
old.par <- par()
par(mfcol = c(2, 1))
with(steps_day, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 10, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
old.par <- par()
par(mfcol = c(2, 1))
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 20, main = 'Adjusted steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
par(old.par)
old.par <- par()
par(mfcol = c(2, 1))
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
par(old.par)
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 20, main = 'Adjusted steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
old.par <- par()
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
par(old.par)
steps_day_cleaned <- aggregate(steps ~ date, data_cleaned, sum)
with(steps_day_cleaned, {
hist(steps, breaks = 20, main = 'Adjusted steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = levels(data$day_type))
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = seq_along(levels(data$day_type)))
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = , col = DRG.Definition )
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
with(subset(steps_interval, day_type == 'weekend'), plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
with(subset(steps_interval, day_type == 'weekend'), plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'green'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
with(subset(steps_interval, day_type == 'weekend'), line(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'green'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
with(subset(steps_interval, day_type == 'weekend'), lines(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'green'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = interval[which.max(steps)], col = 'red')
})
with(subset(steps_interval, day_type == 'weekend'), lines(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'green'))
legend('topright', lwd = 2.5, col = c('blue', 'green'), legend = c('Week day', 'Weekend'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue'))
with(subset(steps_interval, day_type == 'weekend'), lines(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'green'))
legend('topright', lwd = 2.5, col = c('blue', 'green'), legend = c('Week day', 'Weekend'))
data$day_type <- factor(as.POSIXlt(data$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data, mean)
with(subset(steps_interval, day_type == 'weekday'), plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue'))
with(subset(steps_interval, day_type == 'weekend'), lines(interval, steps, col = 'green'))
legend('topright', lwd = 2.5, col = c('blue', 'green'), legend = c('Week day', 'Weekend'))
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
# Get dataset
file_name <- 'activity'
zip_file <- paste0(file_name, '.zip')
if(!file.exists(zip_file))
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip', zip_file)
data <- read.csv(unz(zip_file, paste0(file_name, '.csv')), na.strings = 'NA')
data$date <- as.Date(data$date, format = '%Y-%m-%d') # convert into date
# Aggregate step sum per date
steps_day <- aggregate(steps ~ date, data, sum)
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_interval <- aggregate(steps ~ interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
step_row_total <- nrow(data)
step_row_na <- nrow(data[is.na(data$steps), ])
step_row_positive <- nrow(data[data$steps > 0, ])
data_imputed <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
# Merge mean / interval with default data set in order to put side by side the calculated mean with the default value
data_imputed$steps <- with(data_imputed, ifelse(is.na(steps.x), steps.y, steps.x))
data_imputed <- data_imputed[, c('date', 'interval', 'steps')]
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
with(steps_day, {
lines(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
})
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
lines(steps_day$steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
lines(steps_day$steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'green')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
hist(steps_day$steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'green')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'green')
hist(steps_day$steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'green')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
hist(steps_day$steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'green')
hist(steps_day$steps, breaks = 20, add = T, col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps_day$steps, breaks = 20, add = T, col = 'blue')
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'green')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps_day$steps, breaks = 20, main = 'Imputed Steps per day', xlab = 'Steps', col = 'blue')
hist(steps, breaks = 20, add = T, col = 'green')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'green')
hist(steps_day$steps, breaks = 20, add=T, col=rgb(0, 1, 0, 0.5))
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
hist(steps_day$steps, breaks = 20, add=T, col=rgb(0, 1, 0, 0.5))
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
legend('topright', lwd = 2.5, col = c('green', 'blue', 'red'), legend = c('Imputed steps', 'Default steps', 'Mean'), bty = 'n')
})
# daily steps from imputed data
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day_imputed$steps, na.rm = T), col = 'red')
abline(v = median(steps_day_imputed$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
# Get dataset
file_name <- 'activity'
zip_file <- paste0(file_name, '.zip')
if(!file.exists(zip_file))
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip', zip_file)
data <- read.csv(unz(zip_file, paste0(file_name, '.csv')), na.strings = 'NA')
data$date <- as.Date(data$date, format = '%Y-%m-%d') # convert into date
# Aggregate step sum per date
steps_day <- aggregate(steps ~ date, data, sum)
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_interval <- aggregate(steps ~ interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
step_row_total <- nrow(data)
step_row_na <- nrow(data[is.na(data$steps), ])
step_row_positive <- nrow(data[data$steps > 0, ])
data_imputed <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
# Merge mean / interval with default data set in order to put side by side the calculated mean with the default value
data_imputed$steps <- with(data_imputed, ifelse(is.na(steps.x), steps.y, steps.x))
data_imputed <- data_imputed[, c('date', 'interval', 'steps')]
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day_imputed$steps, na.rm = T), col = 'red')
abline(v = median(steps_day_imputed$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
# Get dataset
file_name <- 'activity'
zip_file <- paste0(file_name, '.zip')
if(!file.exists(zip_file))
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip', zip_file)
data <- read.csv(unz(zip_file, paste0(file_name, '.csv')), na.strings = 'NA')
data$date <- as.Date(data$date, format = '%Y-%m-%d') # convert into date
# Aggregate step sum per date
steps_day <- aggregate(steps ~ date, data, sum)
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'))
})
steps_interval <- aggregate(steps ~ interval, data, mean)
with(steps_interval, {
plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue')
abline(v = interval[which.max(steps)], col = 'red')
legend('topright', lwd = 2.5, col = c('blue', 'red'), legend = c('Mean step', 'Max number of steps'))
})
step_row_total <- nrow(data)
step_row_na <- nrow(data[is.na(data$steps), ])
step_row_positive <- nrow(data[data$steps > 0, ])
data_imputed <- merge(data, steps_interval, by.x = 'interval', by.y = 'interval')
# Merge mean / interval with default data set in order to put side by side the calculated mean with the default value
data_imputed$steps <- with(data_imputed, ifelse(is.na(steps.x), steps.y, steps.x))
data_imputed <- data_imputed[, c('date', 'interval', 'steps')]
# daily steps from default data
with(steps_day, {
hist(steps, breaks = 20, main = 'Steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# daily steps from imputed data
steps_day_imputed <- aggregate(steps ~ date, data_imputed, sum)
with(steps_day_imputed, {
hist(steps, breaks = 20, main = 'Imputed steps per day', xlab = 'Steps', col = 'blue')
abline(v = mean(steps_day$steps, na.rm = T), col = 'red')
abline(v = median(steps_day$steps, na.rm = T), col = 'green')
legend('topright', lwd = 2.5, col = c('blue', 'red', 'green'), legend = c('Total step', 'Mean', 'Median'), bty = 'n')
})
# assign weekday and weekend to a new day_type column
data_imputed$day_type <- factor(as.POSIXlt(data_imputed$date)$wday %in% 1:5, labels = c('weekend', 'weekday'))
steps_interval <- aggregate(steps ~ day_type + interval, data_imputed, mean)
with(subset(steps_interval, day_type == 'weekday'), plot(interval, steps, type = 'l', main = 'Daily mean step', xlab = 'Interval', col = 'blue'))
with(subset(steps_interval, day_type == 'weekend'), lines(interval, steps, col = 'green'))
legend('topright', lwd = 2.5, col = c('blue', 'green'), legend = c('Week day', 'Weekend'))
getwd()
setwd('../ExData_Plotting1/')
download.file('https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip', zip_file)
file_name <- 'household_power_consumption'
zip_file <- paste0(file_name, '.zip')
if(!file.exists(zip_file))
download.file('https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip', zip_file)
